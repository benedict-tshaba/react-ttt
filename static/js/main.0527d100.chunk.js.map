{"version":3,"sources":["components/HistoryList.js","components/Square.js","components/Board.js","AI.js","App.js","components/Clock.js","index.js"],"names":["HistoryList","props","className","currentMove","step","react_default","a","createElement","onClick","id","desc","Square","winner","indexOf","index","value","Board","i","_this","this","components_Square","squares","renderSquare","Component","AI","min","max","Object","classCallCheck","minPlayer","maxPlayer","board","bestMoveVal","Infinity","move","length","copy","predictedMoveVal","minimax","maximizingPlayer","isWinner","isDraw","player","clone","slice","lines","_lines$i","slicedToArray","b","c","some","x","gameState","state","over","draw","winningLine","filter","square","getLocations","col","row","Game","possibleConstructorReturn","getPrototypeOf","call","history","Array","fill","huPlayer","aiPlayer","xIsNext","aiTurn","stepNumber","location","ai","play","setState","concat","hist","reverse","evt","target","map","element","item","status","_this2","current","gameStats","moves","components_HistoryList","key","jumpTo","components_Board","handleClick","event","selectSign","type","name","defaultChecked","sortList","Clock","date","Date","timerID","setInterval","tick","clearInterval","toLocaleTimeString","ReactDOM","render","Fragment","src_components_Clock","src_App","href","rel","document","getElementById"],"mappings":"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","file":"static/js/main.0527d100.chunk.js","sourcesContent":["import React from 'react';\n\nfunction HistoryList(props) {\n  let className = \"\";\n  if(props.currentMove === props.step) {\n    className = \"ctrl current-move\";\n  }\n  return (\n    <li>\n      <button onClick = { props.onClick } id={ props.id } className={ className }>{ props.desc }</button> \n    </li>\n  );\n}\n\nexport default HistoryList;","import React from 'react';\n\nfunction Square(props) {\n  let className = \"square\";\n  if( props.winner.indexOf(props.index) !== -1 ) {\n    className = \"highlight\";\n  }\n  return (\n    <button \n      className={ className } \n      onClick={ props.onClick }\n    >\n    { props.value }\n    </button>\n  );\n}\n\nexport default Square;","import React, { Component } from 'react';\nimport Square from './Square';\n\nclass Board extends Component {\n    \n  renderSquare(i) {\n    return (\n      <Square \n        value={ this.props.squares[i] }\n        onClick ={ () => this.props.onClick(i) }\n        winner={ this.props.winner }\n        index={ i }\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default Board;","export default class AI {\n\n\tconstructor(min, max) {\n\t\tthis.minPlayer = min;\n\t\tthis.maxPlayer = max;\n\t}\n\n\tplay(board) {\n\t\tlet bestMoveVal = -Infinity;\n\t\tlet move = 0;\n\n\t\tfor (let i = 0; i < board.length; i++) {\n\t\t\tlet copy = this.move(i, this.maxPlayer, board);\n\n\t\t\tif(copy) {\n\t\t\t\tlet predictedMoveVal = this.minimax(copy, false);\n\n\t\t\t\tif (predictedMoveVal > bestMoveVal) {\n\t\t\t\t\tbestMoveVal = predictedMoveVal;\n\t\t\t\t\tmove = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn move;\n\t}\n\n\tminimax(board, maximizingPlayer) {\n\t\tif (this.isWinner(this.maxPlayer, board)) return Infinity;\n\t\tif (this.isWinner(this.minPlayer, board)) return -Infinity;\n\t\tif (this.isDraw(board)) return 0;\n\n\t\tif(maximizingPlayer) {\n\t\t\tlet bestMoveVal = -Infinity;\n\n\t\t\tfor (let i = 0; i < board.length; i++) {\n\t\t\t\tlet copy = this.move(i, this.maxPlayer, board);\n\n\t\t\t\tif(copy) {\n\t\t\t\t\tlet predictedMoveVal = this.minimax(copy, false);\n\n\t\t\t\t\tif (predictedMoveVal > bestMoveVal) {\n\t\t\t\t\t\tbestMoveVal = predictedMoveVal;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn bestMoveVal;\n\n\t\t} else {\n\t\t\tlet bestMoveVal = Infinity;\n\n\t\t\tfor (let i = 0; i < board.length; i++) {\n\t\t\t\tlet copy = this.move(i, this.minPlayer, board);\n\n\t\t\t\tif(copy) {\n\t\t\t\t\tlet predictedMoveVal = this.minimax(copy, true);\n\n\t\t\t\t\tif (predictedMoveVal < bestMoveVal) {\n\t\t\t\t\t\tbestMoveVal = predictedMoveVal;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn bestMoveVal;\n\t\t}\n\t}\n\n\tmove(move, player, board) {\n\t\tlet copy = this.clone(board);\n\n\t\tif (copy[move] === null) {\n\t\t\tcopy[move] = player;\n\t\t\treturn copy;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tclone(board) {\n\t\treturn board.slice(0);\n\t}\n\n\tisWinner(player, board) {\n\t\tconst lines = [\n    \t\t[0, 1, 2],\n    \t\t[3, 4, 5],\n    \t\t[6, 7, 8],\n    \t\t[0, 3, 6],\n    \t\t[1, 4, 7],\n    \t\t[2, 5, 8],\n    \t\t[0, 4, 8],\n    \t\t[2, 4, 6],\n  \t\t];\n  \n  \t\tfor(let i = 0; i < lines.length; i++) {\n    \t\tconst [a, b, c] = lines[i];\n    \t\tif( board[a] && board[a] === board[b] && board[a] === board[c] ) {\n      \t\t\treturn player === board[a];\n    \t\t}\n  \t\t}\n\n  \t\treturn false;\n\t}\n\n\tisDraw(board) {\n\t\treturn !board.some(x=>x===null);\n\t}\n}","import React, { Component } from 'react';\n\nimport './App.css';\nimport HistoryList from './components/HistoryList';\nimport Board from './components/Board';\n\nimport AI from './AI';\n\nclass Game extends Component {\n    \n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      huPlayer: 'O',\n      aiPlayer: 'X',\n      xIsNext: true,\n      aiTurn: true,\n      stepNumber: 0,\n      location: [{col: 0, row: 0}], //Display the location for each move in the format (col, row)\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.aiTurn) {\n      this.aiTurn();\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.state.aiTurn) {\n      this.aiTurn();\n    }\n  }\n\n  aiTurn() {\n\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const location = this.state.location.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    const ai = new AI(this.state.huPlayer, this.state.aiPlayer);\n\n    if (gameState(squares).over) {\n      return;\n    }\n\n    let move = ai.play(squares);\n    squares[move] = this.state.aiPlayer;\n\n    this.setState({ \n      history: history.concat([{\n        squares: squares,\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n      aiTurn: !this.state.aiTurn,\n      location: location.concat([\n        getLocations(move)\n      ]),\n    });\n  }\n  \n  handleClick(i) {\n\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const location = this.state.location.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    const gameStats = gameState(squares);\n    \n    if( gameStats.over || squares[i]) {\n      //console.log(gameStats);\n      return;\n    }\n\n    //if next player is X but the player is not\n    //stop the play\n    if (this.state.xIsNext && this.state.huPlayer !== 'X') {\n      return;\n    }\n\n    if (!this.state.aiTurn && !this.state.xIsNext && this.state.huPlayer !== 'O') {\n      return;\n    }\n    \n    //squares[i] = this.state.xIsNext ? 'X' : 'O';\n    squares[i] = this.state.huPlayer;\n    \n    this.setState({ \n      history: history.concat([{\n        squares: squares,\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n      aiTurn: !this.state.aiTurn,\n      location: location.concat([\n        getLocations(i)\n      ]),\n    });\n\n  }\n  \n  jumpTo(step) {\n    //console.log(step);\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n      aiTurn: false,\n    });\n  }\n  \n  sortList(hist) {\n    //console.log(hist);\n    this.setState({\n      history: hist.reverse(),\n      location: this.state.location.reverse(),\n    });\n  }\n\n  isTerminal(board) {\n    if(gameState(board).over) {\n      return true;\n    }\n    return false;\n  }\n\n  selectSign(evt) {\n    this.setState({\n      aiTurn: false,\n      huPlayer: evt.target.value,\n      aiPlayer: (evt.target.value === 'X') ? 'O' : 'X',\n    });\n  }\n\n  availMoves(board) {\n    let moves;\n    moves = board.map( (element, index) => {\n                if( element === null) {\n                    return index;\n                }\n                return null;\n            }).filter(item => item !== null );\n    //console.log(moves);\n    return moves;\n  }\n    \n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const gameStats = gameState(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move  ('+this.state.location[move].col+','+this.state.location[move].row+')' : 'Start';\n      return (\n        <HistoryList\n          key={ move }\n          currentMove = { move }\n          step = { this.state.stepNumber }\n          id={ move }\n          desc={ desc }\n          onClick = { () => this.jumpTo(move) }\n        />\n      );\n    });\n    \n    let status;\n    \n    if(gameStats.over) {\n      if(gameStats.winner !== '') {\n        status = gameStats.winner+' Wins!';\n      } else if(gameStats.draw) {\n        status = \"Its A Draw!\";\n      }\n    } else {\n      status = 'Next player: '+ (this.state.xIsNext ? 'X' : 'O');\n    }\n    \n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares = { current.squares }\n            winner = { gameStats.winningLine }\n            onClick = { (i) => this.handleClick(i) }\n          />\n        </div>\n        <div className=\"game-info\">\n          <div className=\"status warning\">{'You are: '+this.state.huPlayer}</div>\n          <div className=\"status success\">{ status }</div>\n          <div className=\"game-info\">\n            <label className=\"status\">Play As</label><br/>\n              <input onClick={ (event) => this.selectSign(event) } type=\"radio\" value=\"X\" name=\"playas\" />X<br/>\n              <input onClick={ (event) => this.selectSign(event) } type=\"radio\" value=\"O\" name=\"playas\" defaultChecked={true}/>O<br/>\n          </div>\n          <ol>{ moves }</ol>\n          <div>\n            <button onClick={ (history) => this.sortList(this.state.history) } className=\"ctrl\">Sort History</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/**\n* Utility Functions\n*/\nfunction gameState(board) {\n  const state = {\n    over: false,\n    draw: false,\n    winner: '',\n    winningLine: []\n  };\n  \n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  \n  for(let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if( board[a] && board[a] === board[b] && board[a] === board[c] ) {\n      state.winner = board[a];\n      state.winningLine = [a,b,c];\n      state.over = true;\n      return state;\n    }\n  }\n  \n  if( _isDraw(board) ) {\n    state.draw = true;\n    state.over = true;\n    return state;\n  }\n  \n  return state;\n}\n\nfunction _isDraw(squares) {\n  let draw = squares.filter( (square) => square === null  );\n  //console.log(draw);\n  return (draw.length === 0);\n}\n\nfunction getLocations(index) {\n  const locations = [\n        {col: 1, row: 1},\n        {col: 2, row: 1},\n        {col: 3, row: 1},\n        {col: 1, row: 2},\n        {col: 2, row: 2},\n        {col: 3, row: 2},\n        {col: 1, row: 3},\n        {col: 2, row: 3},\n        {col: 3, row: 3},\n      ];\n\n  return locations[index];\n}\n\n/**\n* End Utility Functions\n*/\n\nexport default Game;","import React, { Component } from 'react';\nimport './Clock.css';\n\nclass Clock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n  \n  componentDidMount() {\n    this.timerID = setInterval(\n        () => { this.tick() } , 1000\n    );  \n  }\n  \n  componentWillUnmount() {\n    clearInterval(this.timerID);  \n  }\n  \n  tick() {\n    this.setState({\n       date: new Date() \n    }); \n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h3>\n            <code> {this.state.date.toLocaleTimeString() } </code>\n          </h3>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Clock;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './App';\nimport Clock from './components/Clock';\n\nReactDOM.render(\n  <React.Fragment>\n    <Clock />\n    <Game />\n    <div> Created by\n      <a\n        className=\"App-link\"\n        href=\"https://github.com/benedit-tshaba\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        > Benedict Tshaba\n      </a>\n    </div>\n  </React.Fragment>,\n  document.getElementById('root')\n);"],"sourceRoot":""}